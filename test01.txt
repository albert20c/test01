hello github

http://ftp.daum.net/ubuntu

open 'language support' -> downloads some pkg
재부팅 후 settings->Region & Language에 Korean(Hangul) 추가

sudo apt install gnome-tweaks
재부팅
tweaks -> Keyboard & Mouse -> Additional Layout Options -> Korean Hangul/Hanja keys
-> Make right Alt a Hangul key와 Make right Ctrl a Hanja key를 체크한다.
IBusHangul Setup에서 한글키와 한자키를 등록한다.

동영상 재생 sudo apt install mpv

vscode 설치
홈페이지에서 .deb package 다운로드
sudo apt install ./<file>.deb

chrome 설치
홈페이지에서 .deb package 다운로드
sudo apt install ./<file>.deb

Dash to Panel 설치


Installing ROS 2 Foxy Fitzroy

source /opt/ros/foxy/setup.bash

git 설치
sudo apt install git

node js 설치
sudo apt install nodejs

npm 설치
sudo apt install npm

electron 설치
npm install --save-dev electron #???

# Clone the repository
$ git clone https://github.com/electron/electron-quick-start
# Go into the repository
$ cd electron-quick-start
# Install dependencies
$ npm install #???
# Run the app
$ npm start

opencv 설치확인 ??
pkg-config --modversion opencv4

opencv 설치 ??
sudo apt install python3-opencv

Miniconda 설치
홈페이지에서 installer 다운로드
sha256sum filename
bash Miniconda3-latest-Linux-x86_64.sh

conda create -n vsc
conda install -c conda-forge nodejs
node --version
npm --version
conda install -c conda-forge electron

conda install -c conda-forge detectron2

conda create -n [env-name] --clone [src-env-name]
conda env remove -n ENV_NAME
conda env list

Go to File>Preference>Settings and in user settings  Title Bar Style "window.titleBarStyle": "custom",

conda install -c conda-forge pylint
conda install pytorch torchvision cpuonly -c pytorch
conda install -c conda-forge opencv

sudo apt install git
git clone https://github.com/facebookresearch/detectron2.git
python -m pip install -e detectron2
python -m pip install 'git+https://github.com/facebookresearch/detectron2.git'

git clone https://github.com/oneapi-src/oneDNN.git

mkdir -p build && cd build

conda install -c conda-forge pyopencl

WARNING: No ICDs were found. Either,
- Install a conda package providing a OpenCL implementation (pocl, oclgrind, intel-compute-runtime, beignet) or 
- Make your system-wide implementation visible by installing ocl-icd-system conda package.

conda install -c conda-forge ocl-icd-system
conda install -c conda-forge clinfo

apt-get install intel-opencl-icd
sudo apt install intel-opencl-icd
clinfo

cmake .. -DDNNL_GPU_RUNTIME=OCL
https://documen.tician.de/pyopencl/misc.html
conda install -c conda-forge intel-compute-runtime
sudo apt install opencl-headers
sudo apt install ocl-icd-opencl-dev
sudo apt install clinfo ocl-icd-opencl-dev opencl-headers

Intel® SDK for OpenCL™ Applications for Linux 다운로드
intel_sdk_for_opencl_applications_2020.1.395.tar.gz

tar -xvf intel_sdk_for_opencl_applications_2020.1.395.tar.gz
cd intel_sdk_for_opencl_applications_2020.1.395
sudo ./install.sh
cmake .. -DDNNL_GPU_RUNTIME=OCL -DOPENCLROOT=/opt/intel/system_studio_2020

Intel® Performance Libraries
intel Threading Building Blocks
l_tbb_2020.2.217.tgz
tar -xzf l_tbb_2020.2.217.tgz
cd
sudo ./install.sh

conda install -c anaconda mkl-dnn

Compute Library for Deep Neural Networks (clDNN)
git clone  https://github.com/intel/cldnn.git
cmake -E make_directory build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .. && make

https://docs.openvinotoolkit.org/2020.3/_docs_install_guides_installing_openvino_linux.html#additional-GPU-steps
https://docs.openvinotoolkit.org/latest/_docs_install_guides_installing_openvino_linux.html
l_openvino_toolkit_p_2020.3.194.tgz
